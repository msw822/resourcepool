<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>

	<filter>
		<filter-name>characterEncodeFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>characterEncodeFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/api.action</url-pattern>
	</filter-mapping>
<!--
	<servlet>
		<servlet-name>Jersey REST Service</servlet-name>
		<servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<param-value>com.cmsz.cloudplatform.rs</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Jersey REST Service</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>
-->
	<!-- 加载log4j -->
	<context-param>
	   <param-name>webAppRootKey</param-name>
	   <param-value>iaas.root</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.xml</param-value>
	</context-param>
	<!-- 监听Log4j -->
	<listener>
	   <listener-class>
	    org.springframework.web.util.Log4jConfigListener
	   </listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
        <listener-class>com.hp.xo.resourcepool.web.action.core.StartupListener</listener-class>
    </listener>	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext-*.xml
		</param-value>
	</context-param>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!--OpenSessionInViewFilter配置，其实是一个又繁琐性能又低的东西，以后再也不想用到 
	singleSession默认为true,若设为false则等于没用OpenSessionInView -->
       <filter>  
               <filter-name>OpenSessionInViewFilter</filter-name>  
               <filter-class>  
                    org.springframework.orm.hibernate4.support.OpenSessionInViewFilter
              </filter-class>  
    <!--             <init-param>
        <param-name>sessionFactoryBeanName</param-name>
        <param-value>sessionFactory</param-value>
    </init-param>
     --> 
             <init-param>  
                       <param-name>singleSession</param-name>  
                     <param-value>true</param-value>  
              </init-param>  
       </filter>  
      <filter-mapping>  
              <filter-name>OpenSessionInViewFilter</filter-name>  
                <url-pattern>/api.action</url-pattern>  
        </filter-mapping> 
         <servlet>
        <servlet-name>consoleServlet</servlet-name>
        <servlet-class>com.hp.xo.resourcepool.web.servlet.ConsoleProxyServlet</servlet-class>
        <load-on-startup>6</load-on-startup>
    </servlet>
   <servlet-mapping>   
         <servlet-name>consoleServlet</servlet-name>   
         <url-pattern>/console</url-pattern> 
    </servlet-mapping>
</web-app>